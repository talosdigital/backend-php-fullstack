<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class UserEntityUserPictureHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['url'])) {
            $value = $data['url'];
            $return = (string) $value;
            $this->class->reflFields['url']->setValue($document, $return);
            $hydratedData['url'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['long_url'])) {
            $value = $data['long_url'];
            $return = (string) $value;
            $this->class->reflFields['long_url']->setValue($document, $return);
            $hydratedData['long_url'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['width'])) {
            $value = $data['width'];
            $return = (string) $value;
            $this->class->reflFields['width']->setValue($document, $return);
            $hydratedData['width'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['height'])) {
            $value = $data['height'];
            $return = (string) $value;
            $this->class->reflFields['height']->setValue($document, $return);
            $hydratedData['height'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }
        return $hydratedData;
    }
}